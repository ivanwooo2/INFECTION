using System.Collections;
using System.Collections.Generic;
using TMPro;
using UnityEngine;
using UnityEngine.SceneManagement;

public class TutorialManager : MonoBehaviour
{
    [SerializeField] private GameObject TutorialCanvas;
    [SerializeField] private TMP_Text TutorialText;
    [SerializeField] private TMP_Text BossUItext;
    [SerializeField] private TMP_Text PlayerHPUIText;
    [SerializeField] private TMP_Text PlayerSkillText;
    [SerializeField] private TMP_Text TaskText;
    [SerializeField] private TMP_Text inputText;
    [SerializeField] private GameObject TaskBox;
    [SerializeField] private GameObject Player;
    [SerializeField] private GameObject BossManager;
    [SerializeField] private GameObject ProjectileManager;
    [SerializeField] private GameObject MainGameSceneManager;
    private MainGameSceneManage MainGameSceneManage;
    private PlayerMovementTutorial PlayerMovementTutorial;
    private BossManagerTutorial BossManagerTutorial;
    private TutorialProjetileManager TutorialProjetileManager;
    private TutorialCheckManager TutorialCheckManager;
    private GameObject GameManager;
    private TimeManager TimeManager;
    private float BossHealth;
    void Start()
    {
        TutorialCheckManager = FindObjectOfType<TutorialCheckManager>();
        MainGameSceneManage = MainGameSceneManager.GetComponent<MainGameSceneManage>();
        TutorialProjetileManager = ProjectileManager.GetComponent<TutorialProjetileManager>();
        BossManagerTutorial = BossManager.GetComponent<BossManagerTutorial>();
        PlayerMovementTutorial = Player.GetComponent<PlayerMovementTutorial>();
        GameManager = GameObject.FindGameObjectWithTag("GameManager");
        TimeManager = GameManager.GetComponent<TimeManager>();
        TimeManager.isTutorial = true;
        BossUItext.text = string.Empty;
        PlayerHPUIText.text = string.Empty;
        PlayerSkillText.text = string.Empty;
        TaskText.text = string.Empty;
        TaskBox.SetActive(false);
        StartCoroutine(Tutorial());
    }

    IEnumerator Tutorial()
    {
        yield return new WaitForSeconds(1f);
        TutorialCanvas.SetActive(true);
        TutorialText.text = "Welcome To INFECTION\nインフェクションへようこそ";
        yield return new WaitForSeconds(3f);
        TutorialText.text = "Here is a Tutorial to teach you about the basic controls";
        yield return new WaitForSeconds(3f);
        TutorialText.text = "First,Let's Start from The Movement";
        yield return new WaitForSeconds(3f);
        TutorialText.text = "For Keyboard:Arrow Key\nFor Controller:Left Joystick";
        yield return new WaitForSeconds(3f);
        TutorialText.text = "Let's try to move around";
        yield return new WaitForSeconds(3f);
        TutorialCanvas.SetActive(false);
        PlayerMovementTutorial.canMove = true;
        TaskText.text = "Task:\nMove Around";
        inputText.text = "For Keyboard:Arrow Key\nFor Controller:Left Joystick";
        yield return new WaitUntil(() => PlayerMovementTutorial.Moved == true);
        TaskBox.SetActive(true);
        yield return new WaitForSeconds(3f);
        TaskBox.SetActive(false);
        TaskText.text = string.Empty;
        inputText.text = string.Empty;
        Player.transform.position = PlayerMovementTutorial.PlayerOriginposition;
        PlayerMovementTutorial.canMove = false;
        TutorialCanvas.SetActive(true);
        TutorialText.text = "Great!";
        yield return new WaitForSeconds(3f);
        TutorialText.text = "Next,Let me introduce the enemy";
        yield return new WaitForSeconds(3f);
        TutorialCanvas.SetActive(false);
        BossManagerTutorial.SpawnBoss();
        yield return new WaitForSeconds(2f);
        TutorialCanvas.SetActive(true);
        TutorialText.text = "In this game,We only have one Boss";
        yield return new WaitForSeconds(3f);
        TutorialText.text = "During the game,it will go around Randomly";
        yield return new WaitForSeconds(3f);
        TutorialText.text = "But for this Tutorial,it will just stay uptop";
        yield return new WaitForSeconds(3f);
        TutorialText.text = "Next,How to Attack the Boss";
        yield return new WaitForSeconds(3f);
        TutorialText.text = "In this game,we don't have a button for the normal attack";
        yield return new WaitForSeconds(3f);
        TutorialText.text = "To perform a normal attack,just touch the boss";
        yield return new WaitForSeconds(3f);
        TutorialText.text = "Get close to the Boss and it will automatically perform a normal attack";
        yield return new WaitForSeconds(3f);
        TutorialText.text = "Touching the Boss doesn't do damage to us\nso keep touching the boss to reach the maximum DPS";
        yield return new WaitForSeconds(3f);
        TutorialText.text = "Try it out";
        yield return new WaitForSeconds(3f);
        TutorialText.text = string.Empty;
        TutorialCanvas.SetActive(false);
        PlayerMovementTutorial.canMove = true;
        TaskText.text = "Task:\nGet close to the Boss\nDo some damage";
        yield return new WaitUntil(() => BossHealth >= 60f);
        TaskBox.SetActive(true);
        yield return new WaitForSeconds(3f);
        TaskBox.SetActive(false);
        TaskText.text = string.Empty;
        Player.transform.position = PlayerMovementTutorial.PlayerOriginposition;
        PlayerMovementTutorial.canMove = false;
        TutorialCanvas.SetActive(true);
        BossUItext.text = "This is the Boss Health Bar";
        yield return new WaitForSeconds(3f);
        BossUItext.text = "If you do enough damage to the Boss\nThe Health Bar will increase by percentage";
        yield return new WaitForSeconds(3f);
        BossUItext.text = "If it went to 100%,GameClear";
        BossUItext.text = string.Empty;
        TutorialCanvas.SetActive (false);
        TutorialProjetileManager.spawnSword();
        yield return new WaitForSeconds(1.7f);
        MainGameSceneManage.isTutorialPause = true;
        Time.timeScale = 0;
        TutorialCanvas.SetActive(true);
        TutorialText.text = "This is a SlowAttack make from the Boss";
        yield return new WaitForSecondsRealtime(3f);
        TutorialText.text = "if it hit us,it will do damage to us";
        yield return new WaitForSecondsRealtime(3f);
        TutorialText.text = string.Empty;
        MainGameSceneManage.isTutorialPause = false;
        Time.timeScale = 1;
        TutorialCanvas.SetActive(false);
        yield return new WaitForSeconds(2f);
        TutorialCanvas.SetActive(true);
        PlayerHPUIText.text = "This is our Health Bar";
        yield return new WaitForSeconds(3f);
        PlayerHPUIText.text = "If it went to 0,GameOver";
        yield return new WaitForSeconds(2f);
        TutorialCanvas.SetActive(false);
        PlayerHPUIText.text = string.Empty;
        TutorialProjetileManager.spawnLaser();
        yield return new WaitForSeconds(1f);
        MainGameSceneManage.isTutorialPause = true;
        Time.timeScale = 0;
        TutorialCanvas.SetActive(true);
        TutorialText.text = "There are some Quick/StrongAttack will make from the Boss ";
        yield return new WaitForSecondsRealtime(3f);
        TutorialText.text = "It will have a yellow warning before it comes";
        yield return new WaitForSecondsRealtime(3f);
        TutorialText.text = "You can use the basic movement to dodge it Or";
        yield return new WaitForSecondsRealtime(3f);
        TutorialText.text = "Dou can use dashing to dodge it";
        yield return new WaitForSecondsRealtime(3f);
        TutorialText.text = "Dashing:\nFor Keyboard:Space Key\nFor Controller:L2/R2";
        yield return new WaitForSecondsRealtime(3f);
        TutorialText.text = "During dashing,you have invincibility";
        yield return new WaitForSecondsRealtime(3f);
        TutorialText.text = "Let's try to dodge it";
        yield return new WaitForSecondsRealtime(3f);
        Time.timeScale = 1;
        MainGameSceneManage.isTutorialPause = false;
        TutorialCanvas.SetActive(false);
        PlayerMovementTutorial.canMove = true;
        PlayerMovementTutorial.canDash = true;
        TaskText.text = "Task:\nUse Dashing";
        inputText.text = "For Keyboard:Space Key\nFor Controller:L2/R2";
        yield return new WaitUntil(() => PlayerMovementTutorial.dashed == true);
        TaskBox.SetActive(true);
        yield return new WaitForSeconds(3f);
        TaskBox.SetActive(false);
        TaskText.text = string.Empty;
        inputText.text = string.Empty;
        TutorialCanvas.SetActive(true);
        PlayerMovementTutorial.canMove = false;
        PlayerMovementTutorial.canDash = false;
        Player.transform.position = PlayerMovementTutorial.PlayerOriginposition;
        TutorialText.text = "Great!";
        yield return new WaitForSeconds(3f);
        TutorialText.text = "Next,let us talk about Player skill";
        yield return new WaitForSeconds(3f);
        TutorialText.text = "Each Charactors have a different skill";
        yield return new WaitForSeconds(3f);
        TutorialText.text = "For example,this charactor can multiple the damage that deal to the Boss during skill active";
        yield return new WaitForSeconds(3f);
        TutorialText.text = "For the Skill Input:\nFor Keyboard:Q Key\nFor Controller:● Button";
        yield return new WaitForSeconds(3f);
        TutorialText.text = "Let's try it out";
        yield return new WaitForSeconds(3f);
        TutorialCanvas.SetActive(false);
        PlayerMovementTutorial.canMove = true;
        PlayerMovementTutorial.canSkill = true;
        PlayerMovementTutorial.canDash = true;
        TaskText.text = "Task:\nUse Skill";
        inputText.text = "For Keyboard:Q Key\nFor Controller:● Button";
        yield return new WaitUntil(() => PlayerMovementTutorial.Skilled == true);
        TaskBox.SetActive(true);
        yield return new WaitForSeconds(6f);
        TaskBox.SetActive(false);
        TaskText.text = string.Empty;
        inputText.text = string.Empty;
        TutorialCanvas.SetActive(true);
        PlayerMovementTutorial.canMove = false;
        PlayerMovementTutorial.canSkill = false;
        PlayerMovementTutorial.canDash = false;
        Player.transform.position = PlayerMovementTutorial.PlayerOriginposition;
        TutorialText.text = "Great!";
        yield return new WaitForSeconds(3f);
        TutorialText.text = string.Empty;
        PlayerSkillText.text = "Here it will show the cooldown\nActiveSkill/Dashing/PassiveSkill";
        yield return new WaitForSeconds(3f);
        PlayerSkillText.text = string.Empty;
        TutorialCanvas.SetActive(false);
        BossManagerTutorial.SpawnClosestWeakPoint();
        yield return new WaitForSeconds(3f);
        TutorialCanvas.SetActive(true);
        TutorialText.text = "Look like we just found a WeakPoint on the Boss";
        yield return new WaitForSeconds(3f);
        TutorialText.text = "During the game,a WeakPoint will spawn at the random position at random time";
        yield return new WaitForSeconds(3f);
        TutorialText.text = "You can get close to the weakpoint and press the button to deal WeakPointDamage";
        yield return new WaitForSeconds(3f);
        TutorialText.text = "WeakPoint Button:\nFor Keyboard:Shift Key\nFor Controller:■ Button";
        yield return new WaitForSeconds(3f);
        TutorialText.text = "Let's try it out";
        yield return new WaitForSeconds(3f);
        TutorialCanvas.SetActive(false);
        PlayerMovementTutorial.canMove = true;
        PlayerMovementTutorial.canSkill = true;
        PlayerMovementTutorial.canDash = true;
        TaskText.text = "Task:\nGet close to the Weakpoint\nDeal Weakpoint Damage";
        inputText.text = "For Keyboard:shift Key\nFor Controller:■ Button";
        yield return new WaitUntil(() => BossManagerTutorial.WeakPointHited == true);
        TaskBox.SetActive(true);
        yield return new WaitForSeconds(3f);
        TaskBox.SetActive(false);
        TaskText.text = string.Empty;
        inputText.text = string.Empty;
        TutorialCanvas.SetActive(true);
        PlayerMovementTutorial.canMove = false;
        PlayerMovementTutorial.canSkill = false;
        PlayerMovementTutorial.canDash = false;
        Player.transform.position = PlayerMovementTutorial.PlayerOriginposition;
        TutorialText.text = "Excellent!";
        yield return new WaitForSeconds(3f);
        TutorialText.text = "That's all for the Tutorial";
        yield return new WaitForSeconds(3f);
        TutorialText.text = "Let's us Go For The Real Battle!";
        yield return new WaitForSeconds(3f);
        if (TutorialCheckManager != null)
        {
            TutorialCheckManager.TutorialDone = true;
        }
        SceneManager.LoadScene("CharacterSelectScene");
        yield return null;
    }

    void Update()
    {
        BossHealth = BossManagerTutorial.currentHealth;
    }

    public void Skip()
    {
        if (TutorialCheckManager != null)
        {
            TutorialCheckManager.TutorialDone = true;
        }
        SceneManager.LoadScene("CharacterSelectScene");
    }
}
